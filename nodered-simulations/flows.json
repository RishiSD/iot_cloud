[
    {
        "id": "7c7dc628.08a158",
        "type": "tab",
        "label": "Simulated Sensors",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1c4074bd.e3bf8b",
        "type": "function",
        "z": "7c7dc628.08a158",
        "name": "loop",
        "func": "function getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min +1)) + min;\n}\n\ncontext.loop = context.loop || \"stop\";\ncontext.loops = context.loops || 0;\n\nswitch (msg.payload) {\n\tcase \"stop\":\n\t\tcontext.loops = context.loops + 1;\n\t\tmsg.payload = \"stopped\";\n\t\tcontext.loop = \"stop\";\n\t\treturn [null,null];\n\t\n\tcase \"start\":\n\tcase \"decrease\":\n\t\tmsg.payload = 10;\n\t\tcontext.loop = \"loop\";\n\t\tcontext.loops = 1;\n\t\treturn [msg,msg];\n\t\n\tcase \"alert\":\n\t\tmsg.payload = 35;\n\t\tcontext.loop = \"alert\";\n\t\tcontext.loops = context.loops + 1;;\n\t\treturn [msg,msg];\n\t\n\tdefault:\n\t\tif (context.loop == \"loop\") {\n\t\t\tcontext.loops = context.loops + 1;\n\t\t\t\n\t\t\tif (msg.payload > 50) {\n\t\t\t    msg.payload = msg.payload + getRandomInt(-3, -1)\n\t\t\t}\n\t\t\telse if (msg.payload < 2) {\n\t\t\t    msg.payload = msg.payload + getRandomInt(1, 3)\n\t\t\t}\n\t\t\telse {\n\t\t\t    msg.payload = msg.payload + getRandomInt(-1, 1);\n\t\t\t}\n\t\t\t\n\t\t\treturn [msg,msg];\n\t\t}\n\t\telse if (context.loop == \"alert\") {\n\t\t    msg.payload = msg.payload + getRandomInt(-2, 2);\n\t\t    return [msg,msg];\n\t\t}\n\t\telse {\n\t\t\treturn [null,null]; \n\t\t}\n}",
        "outputs": "2",
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n\nvar alert = 0;",
        "finalize": "// Code added here will be run when the\n// node is being stopped or re-deployed.\n\nalert = 0;",
        "libs": [],
        "x": 470,
        "y": 180,
        "wires": [
            [
                "15e020b8643f6bfb"
            ],
            [
                "a380b8b5.5c7f48"
            ]
        ]
    },
    {
        "id": "a380b8b5.5c7f48",
        "type": "delay",
        "z": "7c7dc628.08a158",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 480,
        "y": 260,
        "wires": [
            [
                "1c4074bd.e3bf8b"
            ]
        ]
    },
    {
        "id": "7b60d417.849f2c",
        "type": "debug",
        "z": "7c7dc628.08a158",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 630,
        "y": 360,
        "wires": []
    },
    {
        "id": "8cf655a0.7309a8",
        "type": "inject",
        "z": "7c7dc628.08a158",
        "name": "start Sensor",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "home/temperature",
        "payload": "start",
        "payloadType": "str",
        "x": 258,
        "y": 105,
        "wires": [
            [
                "1c4074bd.e3bf8b"
            ]
        ]
    },
    {
        "id": "c59c9644.3a6368",
        "type": "inject",
        "z": "7c7dc628.08a158",
        "name": "stop Sensor",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "home/temperature",
        "payload": "stop",
        "payloadType": "str",
        "x": 260,
        "y": 181,
        "wires": [
            [
                "1c4074bd.e3bf8b"
            ]
        ]
    },
    {
        "id": "839ce25d2dcda6b9",
        "type": "inject",
        "z": "7c7dc628.08a158",
        "name": "alert Sensor",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "home/temperature",
        "payload": "alert",
        "payloadType": "str",
        "x": 250,
        "y": 260,
        "wires": [
            [
                "1c4074bd.e3bf8b"
            ]
        ]
    },
    {
        "id": "15e020b8643f6bfb",
        "type": "function",
        "z": "7c7dc628.08a158",
        "name": "influx format",
        "func": "\nmsg.payload = \"room,sensor=sen_1 temp=\" + msg.payload\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 180,
        "wires": [
            [
                "503ae6f49c619e9e",
                "7b60d417.849f2c"
            ]
        ]
    },
    {
        "id": "d3244f72a6faef1d",
        "type": "mqtt in",
        "z": "7c7dc628.08a158",
        "name": "AWS Mqtt Broker",
        "topic": "actuators/temp",
        "qos": "0",
        "datatype": "auto",
        "broker": "9892382ba52b854b",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 260,
        "y": 320,
        "wires": [
            [
                "1c4074bd.e3bf8b",
                "7b60d417.849f2c"
            ]
        ]
    },
    {
        "id": "d4de2d2b6ec2362d",
        "type": "function",
        "z": "7c7dc628.08a158",
        "name": "loop",
        "func": "function getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min +1)) + min;\n}\n\ncontext.loop = context.loop || \"stop\";\ncontext.loops = context.loops || 0;\n\nswitch (msg.payload) {\n\tcase \"stop\":\n\t\tcontext.loops = context.loops + 1;\n\t\tmsg.payload = \"stopped\";\n\t\tcontext.loop = \"stop\";\n\t\treturn [null,null];\n\tcase \"start\":\n\t\tmsg.payload = 40;\n\t\tcontext.loop = \"loop\";\n\t\tcontext.loops = 1;\n\t\treturn [msg,msg];\n\tdefault:\n\t\tif (context.loop == \"loop\") {\n\t\t\tcontext.loops = context.loops + 1;\n\t\t\t\n\t\t\tmsg.payload = getRandomInt(35, 45)\n\t\t\t\n\t\t\treturn [msg,msg];\n\t\t}\n\t\telse {\n\t\t\treturn [null,null]; \n\t\t}\n}",
        "outputs": "2",
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n\nvar alert = 0;",
        "finalize": "// Code added here will be run when the\n// node is being stopped or re-deployed.\n\nalert = 0;",
        "libs": [],
        "x": 470,
        "y": 480,
        "wires": [
            [
                "2c0d33bfa021e839"
            ],
            [
                "6cc77ccc1eed5315"
            ]
        ]
    },
    {
        "id": "6cc77ccc1eed5315",
        "type": "delay",
        "z": "7c7dc628.08a158",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 460,
        "y": 620,
        "wires": [
            [
                "d4de2d2b6ec2362d"
            ]
        ]
    },
    {
        "id": "e7e305a9613c3786",
        "type": "debug",
        "z": "7c7dc628.08a158",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 810,
        "y": 420,
        "wires": []
    },
    {
        "id": "6777dce87bebaacf",
        "type": "inject",
        "z": "7c7dc628.08a158",
        "name": "start Sensor",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "home/temperature",
        "payload": "start",
        "payloadType": "str",
        "x": 258,
        "y": 405,
        "wires": [
            [
                "d4de2d2b6ec2362d"
            ]
        ]
    },
    {
        "id": "a8344f10d588907e",
        "type": "inject",
        "z": "7c7dc628.08a158",
        "name": "stop Sensor",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "home/temperature",
        "payload": "stop",
        "payloadType": "str",
        "x": 260,
        "y": 481,
        "wires": [
            [
                "d4de2d2b6ec2362d"
            ]
        ]
    },
    {
        "id": "2c0d33bfa021e839",
        "type": "function",
        "z": "7c7dc628.08a158",
        "name": "influx format",
        "func": "\nmsg.payload = \"room,sensor=sen_1 humidity=\" + msg.payload\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 480,
        "wires": [
            [
                "e7e305a9613c3786",
                "e52605351bd38a5b"
            ]
        ]
    },
    {
        "id": "503ae6f49c619e9e",
        "type": "mqtt out",
        "z": "7c7dc628.08a158",
        "name": "AWS Mqtt Broker",
        "topic": "sensors",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9892382ba52b854b",
        "x": 820,
        "y": 300,
        "wires": []
    },
    {
        "id": "e52605351bd38a5b",
        "type": "mqtt out",
        "z": "7c7dc628.08a158",
        "name": "AWS Mqtt Broker",
        "topic": "sensors",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9892382ba52b854b",
        "x": 770,
        "y": 620,
        "wires": []
    },
    {
        "id": "8daece030aca7cb0",
        "type": "function",
        "z": "7c7dc628.08a158",
        "name": "loop",
        "func": "function getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min +1)) + min;\n}\n\ncontext.loop = context.loop || \"stop\";\ncontext.loops = context.loops || 0;\n\nswitch (msg.payload) {\n\tcase \"stop\":\n\t\tcontext.loops = context.loops + 1;\n\t\tmsg.payload = \"stopped\";\n\t\tcontext.loop = \"stop\";\n\t\treturn [null,null];\n\tcase \"start\":\n\t\tmsg.payload = 30;\n\t\tcontext.loop = \"loop\";\n\t\tcontext.loops = 1;\n\t\treturn [msg,msg];\n\tdefault:\n\t\tif (context.loop == \"loop\") {\n\t\t\tcontext.loops = context.loops + 1;\n\t\t\t\n\t\t\tmsg.payload = getRandomInt(28, 32)\n\t\t\t\n\t\t\treturn [msg,msg];\n\t\t}\n\t\telse {\n\t\t\treturn [null,null]; \n\t\t}\n}",
        "outputs": "2",
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\n\nvar alert = 0;",
        "finalize": "// Code added here will be run when the\n// node is being stopped or re-deployed.\n\nalert = 0;",
        "libs": [],
        "x": 430,
        "y": 760,
        "wires": [
            [
                "8df4a7eeb5d6d0ff"
            ],
            [
                "70c0a6fe3d7ab1b0"
            ]
        ]
    },
    {
        "id": "70c0a6fe3d7ab1b0",
        "type": "delay",
        "z": "7c7dc628.08a158",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 420,
        "y": 900,
        "wires": [
            [
                "8daece030aca7cb0"
            ]
        ]
    },
    {
        "id": "bcf5bf2895815d91",
        "type": "debug",
        "z": "7c7dc628.08a158",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 770,
        "y": 700,
        "wires": []
    },
    {
        "id": "ce1bc854b4550f49",
        "type": "inject",
        "z": "7c7dc628.08a158",
        "name": "start Sensor",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "home/temperature",
        "payload": "start",
        "payloadType": "str",
        "x": 218,
        "y": 685,
        "wires": [
            [
                "8daece030aca7cb0"
            ]
        ]
    },
    {
        "id": "367a3ba9e46087a8",
        "type": "inject",
        "z": "7c7dc628.08a158",
        "name": "stop Sensor",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "topic": "home/temperature",
        "payload": "stop",
        "payloadType": "str",
        "x": 220,
        "y": 761,
        "wires": [
            [
                "8daece030aca7cb0"
            ]
        ]
    },
    {
        "id": "8df4a7eeb5d6d0ff",
        "type": "function",
        "z": "7c7dc628.08a158",
        "name": "influx format",
        "func": "\nmsg.payload = \"room,sensor=sen_1 moisture=\" + msg.payload\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 760,
        "wires": [
            [
                "bcf5bf2895815d91",
                "7c2ebf64f46d42ad"
            ]
        ]
    },
    {
        "id": "7c2ebf64f46d42ad",
        "type": "mqtt out",
        "z": "7c7dc628.08a158",
        "name": "AWS Mqtt Broker",
        "topic": "sensors",
        "qos": "0",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "9892382ba52b854b",
        "x": 730,
        "y": 900,
        "wires": []
    },
    {
        "id": "9892382ba52b854b",
        "type": "mqtt-broker",
        "name": "",
        "broker": "MqttBrokerLB-544335290.eu-central-1.elb.amazonaws.com",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    }
]